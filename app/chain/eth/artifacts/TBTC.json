{
  "contractName": "TBTC",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_account",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_account\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"burnFrom(address,uint256)\":{\"details\":\"Burns an amount of the token of a given account                  deducting from the sender's allowance for said account.                  Uses the internal _burn function.\",\"params\":{\"_account\":\"The account whose tokens will be burnt.\",\"_amount\":\"The amount of tokens that will be burnt.\"}},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Mints an amount of the token and assigns it to an account.                  Uses the internal _mint function\",\"params\":{\"_account\":\"The account that will receive the created tokens.\",\"_amount\":\"The amount of tokens that will be created.\"}},\"name()\":{\"return\":\"the name of the token.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another                Uses the internal _transfer function.\",\"params\":{\"_from\":\"The address to send tokens from\",\"_to\":\"The address to transfer tokens to\",\"_value\":\"The amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/liamz/go/src/github.com/keep-network/tbtc/implementation/contracts/tokens/TBTC.sol\":\"TBTC\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/liamz/go/src/github.com/keep-network/tbtc/implementation/contracts/tokens/TBTC.sol\":{\"keccak256\":\"0xe8f3db60b3865d10e694889a54c53af566d0b15cb79fe65fa8b5853a655c05fb\",\"urls\":[\"bzzr://9071416f3e868d4f252c68833b5121bcbb9a3c012420c03c526b0b4ec3388ac1\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xdd18f05c74536a06166c90a17ec3c6932853764f292bed314ceb23e730ff83af\",\"urls\":[\"bzzr://1d8a608339978ac18782f7051816cf23b4072d8814979e3ef74788cc6025cca0\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xaa2cf35177f37a9af9c975a973c813c5520be56ccee3a39b6c9883d4781cd072\",\"urls\":[\"bzzr://2244d517ff73299ad9b6c9dcb7d0788e5e452d8b1624d3027c1fb152135de8f4\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xafff01f07c0aca08e5db86a0f35bcf40cbd0a5da06aeeb9964b06c0bac507866\",\"urls\":[\"bzzr://40bb6c5e5b0c7b20f56eb7bd662e2dbd295f3b8f5f0cbb23cbe5114590110729\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc8a7f15fa44eb10057f8bcb58418d3aed6f5267d211d18f93f3d4e0293e3da44\",\"urls\":[\"bzzr://8825e2508348b01a091ff47b8525e583b6e5604f6679684f805d67a9a6a2a7e9\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604080518082018252601181527f54727573746c65737320626974636f696e00000000000000000000000000000060208083019182528351808501909452600484527f544254430000000000000000000000000000000000000000000000000000000090840152815191929160129161008d91600091906100be565b5081516100a19060019060208501906100be565b506002805460ff191660ff92909216919091179055506101599050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100ff57805160ff191683800117855561012c565b8280016001018555821561012c579182015b8281111561012c578251825591602001919060010190610111565b5061013892915061013c565b5090565b61015691905b808211156101385760008155600101610142565b90565b6108f1806101686000396000f3006080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd1461018b57806323b872dd146101b2578063313ce567146101dc578063395093511461020757806340c10f191461022b57806370a082311461024f57806379cc67901461027057806395d89b4114610296578063a457c2d7146102ab578063a9059cbb146102cf578063dd62ed3e146102f3575b600080fd5b3480156100d557600080fd5b506100de61031a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b50610177600160a060020a03600435166024356103b0565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a061042e565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600160a060020a0360043581169060243516604435610434565b3480156101e857600080fd5b506101f161044b565b6040805160ff9092168252519081900360200190f35b34801561021357600080fd5b50610177600160a060020a0360043516602435610454565b34801561023757600080fd5b50610177600160a060020a0360043516602435610504565b34801561025b57600080fd5b506101a0600160a060020a0360043516610519565b34801561027c57600080fd5b50610294600160a060020a0360043516602435610534565b005b3480156102a257600080fd5b506100de610542565b3480156102b757600080fd5b50610177600160a060020a03600435166024356105a2565b3480156102db57600080fd5b50610177600160a060020a03600435166024356105ed565b3480156102ff57600080fd5b506101a0600160a060020a03600435811690602435166105fa565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103a65780601f1061037b576101008083540402835291602001916103a6565b820191906000526020600020905b81548152906001019060200180831161038957829003601f168201915b5050505050905090565b6000600160a060020a03831615156103c757600080fd5b336000818152600460209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60055490565b6000610441848484610625565b5060019392505050565b60025460ff1690565b6000600160a060020a038316151561046b57600080fd5b336000908152600460209081526040808320600160a060020a038716845290915290205461049f908363ffffffff61071916565b336000818152600460209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006105108383610732565b50600192915050565b600160a060020a031660009081526003602052604090205490565b61053e82826107de565b5050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103a65780601f1061037b576101008083540402835291602001916103a6565b6000600160a060020a03831615156105b957600080fd5b336000908152600460209081526040808320600160a060020a038716845290915290205461049f908363ffffffff6108ae16565b6000610510338484610625565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600160a060020a03831660009081526003602052604090205481111561064a57600080fd5b600160a060020a038216151561065f57600080fd5b600160a060020a038316600090815260036020526040902054610688908263ffffffff6108ae16565b600160a060020a0380851660009081526003602052604080822093909355908416815220546106bd908263ffffffff61071916565b600160a060020a0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561072b57600080fd5b9392505050565b600160a060020a038216151561074757600080fd5b60055461075a908263ffffffff61071916565b600555600160a060020a038216600090815260036020526040902054610786908263ffffffff61071916565b600160a060020a03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156107f357600080fd5b600160a060020a03821660009081526003602052604090205481111561081857600080fd5b60055461082b908263ffffffff6108ae16565b600555600160a060020a038216600090815260036020526040902054610857908263ffffffff6108ae16565b600160a060020a0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600080838311156108be57600080fd5b50509003905600a165627a7a723058201df4587de1acbb2fe3dceda2f9fe2ad3b0e88d98265231afa29c5f57180ddb1f0029",
  "deployedBytecode": "0x6080604052600436106100c45763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100c9578063095ea7b31461015357806318160ddd1461018b57806323b872dd146101b2578063313ce567146101dc578063395093511461020757806340c10f191461022b57806370a082311461024f57806379cc67901461027057806395d89b4114610296578063a457c2d7146102ab578063a9059cbb146102cf578063dd62ed3e146102f3575b600080fd5b3480156100d557600080fd5b506100de61031a565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610118578181015183820152602001610100565b50505050905090810190601f1680156101455780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015f57600080fd5b50610177600160a060020a03600435166024356103b0565b604080519115158252519081900360200190f35b34801561019757600080fd5b506101a061042e565b60408051918252519081900360200190f35b3480156101be57600080fd5b50610177600160a060020a0360043581169060243516604435610434565b3480156101e857600080fd5b506101f161044b565b6040805160ff9092168252519081900360200190f35b34801561021357600080fd5b50610177600160a060020a0360043516602435610454565b34801561023757600080fd5b50610177600160a060020a0360043516602435610504565b34801561025b57600080fd5b506101a0600160a060020a0360043516610519565b34801561027c57600080fd5b50610294600160a060020a0360043516602435610534565b005b3480156102a257600080fd5b506100de610542565b3480156102b757600080fd5b50610177600160a060020a03600435166024356105a2565b3480156102db57600080fd5b50610177600160a060020a03600435166024356105ed565b3480156102ff57600080fd5b506101a0600160a060020a03600435811690602435166105fa565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103a65780601f1061037b576101008083540402835291602001916103a6565b820191906000526020600020905b81548152906001019060200180831161038957829003601f168201915b5050505050905090565b6000600160a060020a03831615156103c757600080fd5b336000818152600460209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60055490565b6000610441848484610625565b5060019392505050565b60025460ff1690565b6000600160a060020a038316151561046b57600080fd5b336000908152600460209081526040808320600160a060020a038716845290915290205461049f908363ffffffff61071916565b336000818152600460209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006105108383610732565b50600192915050565b600160a060020a031660009081526003602052604090205490565b61053e82826107de565b5050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156103a65780601f1061037b576101008083540402835291602001916103a6565b6000600160a060020a03831615156105b957600080fd5b336000908152600460209081526040808320600160a060020a038716845290915290205461049f908363ffffffff6108ae16565b6000610510338484610625565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b600160a060020a03831660009081526003602052604090205481111561064a57600080fd5b600160a060020a038216151561065f57600080fd5b600160a060020a038316600090815260036020526040902054610688908263ffffffff6108ae16565b600160a060020a0380851660009081526003602052604080822093909355908416815220546106bd908263ffffffff61071916565b600160a060020a0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561072b57600080fd5b9392505050565b600160a060020a038216151561074757600080fd5b60055461075a908263ffffffff61071916565b600555600160a060020a038216600090815260036020526040902054610786908263ffffffff61071916565b600160a060020a03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a03821615156107f357600080fd5b600160a060020a03821660009081526003602052604090205481111561081857600080fd5b60055461082b908263ffffffff6108ae16565b600555600160a060020a038216600090815260036020526040902054610857908263ffffffff6108ae16565b600160a060020a0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600080838311156108be57600080fd5b50509003905600a165627a7a723058201df4587de1acbb2fe3dceda2f9fe2ad3b0e88d98265231afa29c5f57180ddb1f0029",
  "sourceMap": "162:2110:22:-;;;351:131;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;398:134:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:12;;398:134;;;408:2:22;;467:12:29;;-1:-1:-1;;398:134:29;467:12;:::i;:::-;-1:-1:-1;485:16:29;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;507:9:29;:20;;-1:-1:-1;;507:20:29;;;;;;;;;;;;-1:-1:-1;162:2110:22;;-1:-1:-1;162:2110:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;162:2110:22;;;-1:-1:-1;162:2110:22;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "162:2110:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:67:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:67:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;584:67:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2380:220:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2380:220:28;-1:-1:-1;;;;;2380:220:28;;;;;;;;;;;;;;;;;;;;;;;;;640:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;640:83:28;;;;;;;;;;;;;;;;;;;;1945:325:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1945:325:22;-1:-1:-1;;;;;1945:325:22;;;;;;;;;;;;842:74:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;842:74:29;;;;;;;;;;;;;;;;;;;;;;;3611:330:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3611:330:28;-1:-1:-1;;;;;3611:330:28;;;;;;;773:243:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;773:243:22;-1:-1:-1;;;;;773:243:22;;;;;;;920:98:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;920:98:28;-1:-1:-1;;;;;920:98:28;;;;;1366:271:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1366:271:22;-1:-1:-1;;;;;1366:271:22;;;;;;;;;705:71:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;705:71:29;;;;4397:340:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4397:340:28;-1:-1:-1;;;;;4397:340:28;;;;;;;1637:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1637:127:28;-1:-1:-1;;;;;1637:127:28;;;;;;;1335:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1335:150:28;-1:-1:-1;;;;;1335:150:28;;;;;;;;;;584:67:29;641:5;634:12;;;;;;;;-1:-1:-1;;634:12:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:6;;634:12;;641:5;;634:12;;641:5;634:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:67;:::o;2380:220:28:-;2445:4;-1:-1:-1;;;;;2465:21:28;;;;2457:30;;;;;;2503:10;2494:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2494:29:28;;;;;;;;;;;;:37;;;2542:36;;;;;;;2494:29;;2503:10;2542:36;;;;;;;;;;;-1:-1:-1;2591:4:28;2380:220;;;;:::o;640:83::-;706:12;;640:83;:::o;1945:325:22:-;2027:4;2213:29;2223:5;2230:3;2235:6;2213:9;:29::i;:::-;-1:-1:-1;2259:4:22;1945:325;;;;;:::o;842:74:29:-;902:9;;;;842:74;:::o;3611:330:28:-;3711:4;-1:-1:-1;;;;;3733:21:28;;;;3725:30;;;;;;3811:10;3802:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3802:29:28;;;;;;;;;;:45;;3836:10;3802:45;:33;:45;:::i;:::-;3771:10;3762:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3762:29:28;;;;;;;;;;;;:86;;;3859:60;;;;;;3762:29;;3859:60;;;;;;;;;;;-1:-1:-1;3932:4:28;3611:330;;;;:::o;773:243:22:-;838:4;964:24;970:8;980:7;964:5;:24::i;:::-;-1:-1:-1;1005:4:22;773:243;;;;:::o;920:98:28:-;-1:-1:-1;;;;;997:16:28;975:7;997:16;;;:9;:16;;;;;;;920:98::o;1366:271:22:-;1606:24;1612:8;1622:7;1606:5;:24::i;:::-;1366:271;;:::o;705:71:29:-;764:7;757:14;;;;;;;;-1:-1:-1;;757:14:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:6;;757:14;;764:7;;757:14;;764:7;757:14;;;;;;;;;;;;;;;;;;;;;;;;4397:340:28;4502:4;-1:-1:-1;;;;;4524:21:28;;;;4516:30;;;;;;4602:10;4593:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4593:29:28;;;;;;;;;;:50;;4627:15;4593:50;:33;:50;:::i;1637:127::-;1698:4;1710:32;1720:10;1732:2;1736:5;1710:9;:32::i;1335:150::-;-1:-1:-1;;;;;1456:15:28;;;1432:7;1456:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1335:150::o;4937:277::-;-1:-1:-1;;;;;5029:15:28;;;;;;:9;:15;;;;;;5020:24;;;5012:33;;;;;;-1:-1:-1;;;;;5059:16:28;;;;5051:25;;;;;;-1:-1:-1;;;;;5101:15:28;;;;;;:9;:15;;;;;;:26;;5121:5;5101:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5083:15:28;;;;;;;:9;:15;;;;;;:44;;;;5149:13;;;;;;;:24;;5167:5;5149:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5133:13:28;;;;;;;:9;:13;;;;;;;;;:40;;;;5184:25;;;;;;;5133:13;;5184:25;;;;;;;;;;;;;4937:277;;;:::o;1272:131:27:-;1330:7;1357:5;;;1376:6;;;;1368:15;;;;;;1397:1;1272:131;-1:-1:-1;;;1272:131:27:o;5541:235:28:-;-1:-1:-1;;;;;5611:12:28;;;;5603:21;;;;;;5645:12;;:23;;5662:5;5645:23;:16;:23;:::i;:::-;5630:12;:38;-1:-1:-1;;;;;5695:18:28;;;;;;:9;:18;;;;;;:29;;5718:5;5695:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;5674:18:28;;;;;;:9;:18;;;;;;;;:50;;;;5735:36;;;;;;;5674:18;;;;5735:36;;;;;;;;;;5541:235;;:::o;5988:278::-;-1:-1:-1;;;;;6058:12:28;;;;6050:21;;;;;;-1:-1:-1;;;;;6094:18:28;;;;;;:9;:18;;;;;;6085:27;;;6077:36;;;;;;6135:12;;:23;;6152:5;6135:23;:16;:23;:::i;:::-;6120:12;:38;-1:-1:-1;;;;;6185:18:28;;;;;;:9;:18;;;;;;:29;;6208:5;6185:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6164:18:28;;;;;;:9;:18;;;;;;;;:50;;;;6225:36;;;;;;;6164:18;;6225:36;;;;;;;;;;;5988:278;;:::o;1078:131:27:-;1136:7;;1159:6;;;;1151:15;;;;;;-1:-1:-1;;1184:5:27;;;1078:131::o",
  "source": "pragma solidity 0.4.25;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\n\ncontract TBTC is ERC20Detailed, ERC20 {\n    /// @dev Constructor, calls ERC20Detailed constructor to set Token info\n    ///      ERC20Detailed(TokenName, TokenSymbol, NumberOfDecimals)\n    constructor() ERC20Detailed(\"Trustless bitcoin\", \"TBTC\", 18) public {\n        // solium-disable-previous-line no-empty-blocks\n    }\n\n    /// @dev             Mints an amount of the token and assigns it to an account.\n    ///                  Uses the internal _mint function\n    /// @param _account  The account that will receive the created tokens.\n    /// @param _amount   The amount of tokens that will be created.\n    function mint(address _account, uint256 _amount) public returns (bool){\n        // NOTE: this is a public function with unchecked minting.\n        // TODO: enforce calling authority.\n        _mint(_account, _amount);\n        return true;\n    }\n\n    /// @dev             Burns an amount of the token of a given account\n    ///                  deducting from the sender's allowance for said account.\n    ///                  Uses the internal _burn function.\n    /// @param _account  The account whose tokens will be burnt.\n    /// @param _amount   The amount of tokens that will be burnt.\n    function burnFrom(address _account, uint256 _amount) public {\n        // NOTE: this uses internal function _burn instead of _burnFrom.\n        // This will bypass allowance check for now.\n        // TODO: enforce calling authority.\n        _burn(_account, _amount);\n    }\n\n    /// @dev           Transfer tokens from one address to another\n    ///                Uses the internal _transfer function.\n    /// @param _from   The address to send tokens from\n    /// @param _to     The address to transfer tokens to\n    /// @param _value  The amount of tokens to be transferred\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        // NOTE: this overrides transferFrom in openZeppelin ERC20.sol\n        // in order to bypass allowance check for now.\n        // TODO: enforce calling authority.\n        _transfer(_from, _to, _value);\n        return true;\n    }\n}",
  "sourcePath": "/Users/liamz/go/src/github.com/keep-network/tbtc/implementation/contracts/tokens/TBTC.sol",
  "ast": {
    "absolutePath": "/Users/liamz/go/src/github.com/keep-network/tbtc/implementation/contracts/tokens/TBTC.sol",
    "exportedSymbols": {
      "TBTC": [
        9261
      ]
    },
    "id": 9262,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9195,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 9196,
        "nodeType": "ImportDirective",
        "scope": 9262,
        "sourceUnit": 10366,
        "src": "25:71:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 9197,
        "nodeType": "ImportDirective",
        "scope": 9262,
        "sourceUnit": 10308,
        "src": "97:63:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9198,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10365,
              "src": "179:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$10365",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 9199,
            "nodeType": "InheritanceSpecifier",
            "src": "179:13:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9200,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10307,
              "src": "194:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$10307",
                "typeString": "contract ERC20"
              }
            },
            "id": 9201,
            "nodeType": "InheritanceSpecifier",
            "src": "194:5:22"
          }
        ],
        "contractDependencies": [
          10307,
          10365,
          10434
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9261,
        "linearizedBaseContracts": [
          9261,
          10307,
          10365,
          10434
        ],
        "name": "TBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9209,
              "nodeType": "Block",
              "src": "419:63:22",
              "statements": []
            },
            "documentation": "@dev Constructor, calls ERC20Detailed constructor to set Token info\n      ERC20Detailed(TokenName, TokenSymbol, NumberOfDecimals)",
            "id": 9210,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "54727573746c65737320626974636f696e",
                    "id": 9204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "379:19:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b43e9aa0aa927ba2fad25f35722a839274f525357025d49ea754dfe92d518412",
                      "typeString": "literal_string \"Trustless bitcoin\""
                    },
                    "value": "Trustless bitcoin"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54425443",
                    "id": 9205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "400:6:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bd4e6a494fe721b497dd9fef4db5889943de69e7cecd23b2c097f81f747771ec",
                      "typeString": "literal_string \"TBTC\""
                    },
                    "value": "TBTC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 9206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "408:2:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 9207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9203,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10365,
                  "src": "365:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$10365_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "365:46:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:22"
            },
            "scope": 9261,
            "src": "351:131:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9226,
              "nodeType": "Block",
              "src": "843:173:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9220,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9212,
                        "src": "970:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9221,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9214,
                        "src": "980:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9219,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10217,
                      "src": "964:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9223,
                  "nodeType": "ExpressionStatement",
                  "src": "964:24:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 9224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1005:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9218,
                  "id": 9225,
                  "nodeType": "Return",
                  "src": "998:11:22"
                }
              ]
            },
            "documentation": "@dev             Mints an amount of the token and assigns it to an account.\n                  Uses the internal _mint function\n @param _account  The account that will receive the created tokens.\n @param _amount   The amount of tokens that will be created.",
            "id": 9227,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9212,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 9227,
                  "src": "787:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9214,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9227,
                  "src": "805:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "786:35:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9227,
                  "src": "838:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9216,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "837:6:22"
            },
            "scope": 9261,
            "src": "773:243:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9239,
              "nodeType": "Block",
              "src": "1426:211:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9235,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9229,
                        "src": "1612:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9236,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9231,
                        "src": "1622:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9234,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10265,
                      "src": "1606:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9238,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:24:22"
                }
              ]
            },
            "documentation": "@dev             Burns an amount of the token of a given account\n                  deducting from the sender's allowance for said account.\n                  Uses the internal _burn function.\n @param _account  The account whose tokens will be burnt.\n @param _amount   The amount of tokens that will be burnt.",
            "id": 9240,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9229,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "1384:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9231,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "1402:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1383:35:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:22"
            },
            "scope": 9261,
            "src": "1366:271:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9259,
              "nodeType": "Block",
              "src": "2033:237:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9252,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9242,
                        "src": "2223:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9253,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9244,
                        "src": "2230:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9254,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9246,
                        "src": "2235:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9251,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10177,
                      "src": "2213:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 9255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9256,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:29:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 9257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2259:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9250,
                  "id": 9258,
                  "nodeType": "Return",
                  "src": "2252:11:22"
                }
              ]
            },
            "documentation": "@dev           Transfer tokens from one address to another\n                Uses the internal _transfer function.\n @param _from   The address to send tokens from\n @param _to     The address to transfer tokens to\n @param _value  The amount of tokens to be transferred",
            "id": 9260,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9242,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "1967:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9244,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "1982:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9246,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "1995:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1966:44:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9249,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "2027:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9248,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2026:6:22"
            },
            "scope": 9261,
            "src": "1945:325:22",
            "stateMutability": "nonpayable",
            "superFunction": 10023,
            "visibility": "public"
          }
        ],
        "scope": 9262,
        "src": "162:2110:22"
      }
    ],
    "src": "0:2272:22"
  },
  "legacyAST": {
    "absolutePath": "/Users/liamz/go/src/github.com/keep-network/tbtc/implementation/contracts/tokens/TBTC.sol",
    "exportedSymbols": {
      "TBTC": [
        9261
      ]
    },
    "id": 9262,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9195,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:22"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 9196,
        "nodeType": "ImportDirective",
        "scope": 9262,
        "sourceUnit": 10366,
        "src": "25:71:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 9197,
        "nodeType": "ImportDirective",
        "scope": 9262,
        "sourceUnit": 10308,
        "src": "97:63:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9198,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10365,
              "src": "179:13:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$10365",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 9199,
            "nodeType": "InheritanceSpecifier",
            "src": "179:13:22"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9200,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10307,
              "src": "194:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$10307",
                "typeString": "contract ERC20"
              }
            },
            "id": 9201,
            "nodeType": "InheritanceSpecifier",
            "src": "194:5:22"
          }
        ],
        "contractDependencies": [
          10307,
          10365,
          10434
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 9261,
        "linearizedBaseContracts": [
          9261,
          10307,
          10365,
          10434
        ],
        "name": "TBTC",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9209,
              "nodeType": "Block",
              "src": "419:63:22",
              "statements": []
            },
            "documentation": "@dev Constructor, calls ERC20Detailed constructor to set Token info\n      ERC20Detailed(TokenName, TokenSymbol, NumberOfDecimals)",
            "id": 9210,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "54727573746c65737320626974636f696e",
                    "id": 9204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "379:19:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b43e9aa0aa927ba2fad25f35722a839274f525357025d49ea754dfe92d518412",
                      "typeString": "literal_string \"Trustless bitcoin\""
                    },
                    "value": "Trustless bitcoin"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "54425443",
                    "id": 9205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "400:6:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_bd4e6a494fe721b497dd9fef4db5889943de69e7cecd23b2c097f81f747771ec",
                      "typeString": "literal_string \"TBTC\""
                    },
                    "value": "TBTC"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 9206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "408:2:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 9207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9203,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10365,
                  "src": "365:13:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$10365_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "365:46:22"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "362:2:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:22"
            },
            "scope": 9261,
            "src": "351:131:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9226,
              "nodeType": "Block",
              "src": "843:173:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9220,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9212,
                        "src": "970:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9221,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9214,
                        "src": "980:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9219,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10217,
                      "src": "964:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9223,
                  "nodeType": "ExpressionStatement",
                  "src": "964:24:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 9224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1005:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9218,
                  "id": 9225,
                  "nodeType": "Return",
                  "src": "998:11:22"
                }
              ]
            },
            "documentation": "@dev             Mints an amount of the token and assigns it to an account.\n                  Uses the internal _mint function\n @param _account  The account that will receive the created tokens.\n @param _amount   The amount of tokens that will be created.",
            "id": 9227,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9212,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 9227,
                  "src": "787:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9214,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9227,
                  "src": "805:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9213,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "786:35:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9218,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9217,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9227,
                  "src": "838:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9216,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "838:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "837:6:22"
            },
            "scope": 9261,
            "src": "773:243:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9239,
              "nodeType": "Block",
              "src": "1426:211:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9235,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9229,
                        "src": "1612:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9236,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9231,
                        "src": "1622:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9234,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10265,
                      "src": "1606:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9238,
                  "nodeType": "ExpressionStatement",
                  "src": "1606:24:22"
                }
              ]
            },
            "documentation": "@dev             Burns an amount of the token of a given account\n                  deducting from the sender's allowance for said account.\n                  Uses the internal _burn function.\n @param _account  The account whose tokens will be burnt.\n @param _amount   The amount of tokens that will be burnt.",
            "id": 9240,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burnFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9229,
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "1384:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1384:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9231,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9240,
                  "src": "1402:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1383:35:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:22"
            },
            "scope": 9261,
            "src": "1366:271:22",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9259,
              "nodeType": "Block",
              "src": "2033:237:22",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9252,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9242,
                        "src": "2223:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9253,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9244,
                        "src": "2230:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9254,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9246,
                        "src": "2235:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9251,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10177,
                      "src": "2213:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 9255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9256,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:29:22"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 9257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2259:4:22",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 9250,
                  "id": 9258,
                  "nodeType": "Return",
                  "src": "2252:11:22"
                }
              ]
            },
            "documentation": "@dev           Transfer tokens from one address to another\n                Uses the internal _transfer function.\n @param _from   The address to send tokens from\n @param _to     The address to transfer tokens to\n @param _value  The amount of tokens to be transferred",
            "id": 9260,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9242,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "1967:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9244,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "1982:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1982:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9246,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "1995:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1966:44:22"
            },
            "payable": false,
            "returnParameters": {
              "id": 9250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9249,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 9260,
                  "src": "2027:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9248,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2027:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2026:6:22"
            },
            "scope": 9261,
            "src": "1945:325:22",
            "stateMutability": "nonpayable",
            "superFunction": 10023,
            "visibility": "public"
          }
        ],
        "scope": 9262,
        "src": "162:2110:22"
      }
    ],
    "src": "0:2272:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "1563533123569": {
      "events": {},
      "links": {},
      "address": "0x866Ed306e46415F558DA6ccd502228Ef9a043Bc8",
      "transactionHash": "0x48b9dd4343146d5e39d0f66a7d05c3180ff40092c143c4f2c96790cf3e3978f4"
    }
  },
  "schemaVersion": "3.0.10",
  "updatedAt": "2019-07-19T12:16:37.325Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burnFrom(address,uint256)": {
        "details": "Burns an amount of the token of a given account                  deducting from the sender's allowance for said account.                  Uses the internal _burn function.",
        "params": {
          "_account": "The account whose tokens will be burnt.",
          "_amount": "The amount of tokens that will be burnt."
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints an amount of the token and assigns it to an account.                  Uses the internal _mint function",
        "params": {
          "_account": "The account that will receive the created tokens.",
          "_amount": "The amount of tokens that will be created."
        }
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another                Uses the internal _transfer function.",
        "params": {
          "_from": "The address to send tokens from",
          "_to": "The address to transfer tokens to",
          "_value": "The amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}