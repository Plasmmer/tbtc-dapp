{
  "contractName": "TBTCSystem",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "logCourtesyCalled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x22a147e6"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "logExitedCourtesyCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x22e5724c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_keepAddress",
          "type": "address"
        }
      ],
      "name": "logCreated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x282bfd38"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requester",
          "type": "address"
        },
        {
          "name": "_digest",
          "type": "bytes32"
        },
        {
          "name": "_utxoSize",
          "type": "uint256"
        },
        {
          "name": "_requesterPKH",
          "type": "bytes20"
        },
        {
          "name": "_requestedFee",
          "type": "uint256"
        },
        {
          "name": "_outpoint",
          "type": "bytes"
        }
      ],
      "name": "logRedemptionRequested",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x2b8af661"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_wasFraud",
          "type": "bool"
        }
      ],
      "name": "logStartedLiquidation",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3aac3467"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_txid",
          "type": "bytes32"
        }
      ],
      "name": "logRedeemed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x6e1ba283"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_signingGroupPubkeyX",
          "type": "bytes32"
        },
        {
          "name": "_signingGroupPubkeyY",
          "type": "bytes32"
        }
      ],
      "name": "logRegisteredPubkey",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x869f9469"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "logFunded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8c736503"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "approvedToLog",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x9ffb3862"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "logSetupFailed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa831c816"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "logLiquidated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xc8fba243"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "logFraudDuringSetup",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xe2c50ad8"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_digest",
          "type": "bytes32"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "logGotRedemptionSignature",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf760621e"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_keepAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "Created",
      "type": "event",
      "signature": "0x822b3073be62c5c7f143c2dcd71ee266434ee935d90a1eec3be34710ac8ec1a2"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_requester",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_digest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_utxoSize",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_requesterPKH",
          "type": "bytes20"
        },
        {
          "indexed": false,
          "name": "_requestedFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_outpoint",
          "type": "bytes"
        }
      ],
      "name": "RedemptionRequested",
      "type": "event",
      "signature": "0xc878d7c38ac02179fd80904f0f6c8126ea8659612f4cbb389af37ddf671eb761"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_digest",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_r",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_s",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "GotRedemptionSignature",
      "type": "event",
      "signature": "0x7f7d7327762d01d2c4a552ea0be2bc5a76264574a80aa78083e691a840e509f2"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_signingGroupPubkeyX",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_signingGroupPubkeyY",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "RegisteredPubkey",
      "type": "event",
      "signature": "0x8ee737ab16909c4e9d1b750814a4393c9f84ab5d3a29c08c313b783fc846ae33"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "SetupFailed",
      "type": "event",
      "signature": "0x8fd2cfb62a35fccc1ecef829f83a6c2f840b73dad49d3eaaa402909752086d4b"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "FraudDuringSetup",
      "type": "event",
      "signature": "0x1e61af503f1d7de21d5300094c18bf8700f82b2951a4d54dd2adda13f6b3da30"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event",
      "signature": "0x5af8184bef8e4b45eb9f6ed7734d04da38ced226495548f46e0c8ff8d7d9a524"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "CourtesyCalled",
      "type": "event",
      "signature": "0x6e7b45210b79c12cd1332babd8d86c0bbb9ca898a89ce0404f17064dbfba18c0"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "ExitedCourtesyCall",
      "type": "event",
      "signature": "0x07f0eaafadb9abb1d28da85d4b4c74f1939fd61b535c7f5ab501f618f07e76ee"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_wasFraud",
          "type": "bool"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "StartedLiquidation",
      "type": "event",
      "signature": "0xbef11c059eefba82a15aea8a3a89c86fd08d7711c88fa7daea2632a55488510c"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_txid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event",
      "signature": "0x44b7f176bcc739b54bd0800fe491cbdea19df7d4d6b19c281462e6b4fc504344"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_depositContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "Liquidated",
      "type": "event",
      "signature": "0xa5ee7a2b0254fce91deed604506790ed7fa072d0b14cba4859c3bc8955b9caac"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fetchOraclePrice",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xadd1c817"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fetchRelayCurrentDifficulty",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdab70cb1"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fetchRelayPreviousDifficulty",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x402b783d"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_currentDifficulty",
          "type": "uint256"
        }
      ],
      "name": "submitCurrentDifficulty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x0bcfd609"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "198:1234:18:-;;;288:1;260:29;;;;295:30;;353:8;331:30;;718:40:26;737:20;718:18;;;;:40;:::i;:::-;2220::32;2239:20;2220:18;;;;:40;:::i;:::-;198:1234:18;;1442:190:26;1517:25;;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:26;1621:4;1585:40;;;1442:190::o;198:1234:18:-;;;;;;;",
  "deployedSourceMap": "198:1234:18:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;198:1234:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:26;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:26;-1:-1:-1;;915:133:26;;:::i;:::-;;;;;;;;;;;;;;;;;;4237:200:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4237:200:32;;:::i;:::-;;;;-1:-1:-1;;;;;4237:200:32;;;;;;;;;;;;;;3541:411;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3541:411:32;;;;;;;;:::i;:::-;;820:244:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;820:244:18;;:::i;8234:216:0:-;;;:::i;10269:224::-;;;:::i;5877:285:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5877:285:32;;;;;;;;;;;;;;;;;:::i;3774:248:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3774:248:0;-1:-1:-1;;;;;3774:248:0;;:::i;4631:520::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;4631:520:0;;;;;;;;;;;;;;-1:-1:-1;;4631:520:0;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4631:520:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4631:520:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4631:520:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4631:520:0;;-1:-1:-1;4631:520:0;;-1:-1:-1;;;;;4631:520:0:i;8727:261::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8727:261:0;;;;:::i;700:114:18:-;;;:::i;:::-;;;;;;;;;;;;;;;;1341:89;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1341:89:18;;;;;;;;:::i;6795:132:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6795:132:32;;;;;;;;;;;;;;;;;:::i;2897:223::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2897:223:32;;:::i;9263:236:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9263:236:0;;:::i;2471:207:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2471:207:32;-1:-1:-1;;;;;2471:207:32;;:::i;6121:368:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6121:368:0;;;;;;;:::i;7753:200::-;;;:::i;3314:148::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3314:148:0;-1:-1:-1;;;;;3314:148:0;;:::i;4730:243:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4730:243:32;;;;;;;;;;:::i;6767:210:0:-;;;:::i;388:81:18:-;;;:::i;7632:265:32:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7632:265:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;7632:265:32;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7632:265:32;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7632:265:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7632:265:32;;-1:-1:-1;7632:265:32;;-1:-1:-1;;;;;7632:265:32:i;9776:208:0:-;;;:::i;582:112:18:-;;;:::i;7260:220:0:-;;;:::i;5295:145:32:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5295:145:32;;;;;;;;;;:::i;5484:354:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5484:354:0;;;;;;;;;;;;:::i;915:133:26:-;-1:-1:-1;;1008:33:26;;985:4;1008:33;;;;;;;;;;;;;915:133;;;;:::o;4237:200:32:-;4296:7;4323:16;4331:7;4323;:16::i;:::-;4315:73;;;;-1:-1:-1;;;;;4315:73:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4406:24:32;;;;:15;:24;;;;;;-1:-1:-1;;;;;4406:24:32;;4237:200::o;3541:411::-;3604:13;3620:16;3628:7;3620;:16::i;:::-;3604:32;;3660:5;-1:-1:-1;;;;;3654:11:32;:2;-1:-1:-1;;;;;3654:11:32;;;3646:57;;;;-1:-1:-1;;;;;3646:57:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3722:10;-1:-1:-1;;;;;3722:19:32;;;;:58;;;3745:35;3762:5;3769:10;3745:16;:35::i;:::-;3714:148;;;;-1:-1:-1;;;;;3714:148:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3873:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;3873:29:32;-1:-1:-1;;;;;3873:29:32;;;;;;;;;3917:28;;3873:24;;3917:28;;;;;;;3541:411;;;:::o;820:244:18:-;923:18;902:17;;:39;898:160;;978:17;;;957:18;:38;1009;;;898:160;820:244;:::o;8234:216:0:-;8279:4;8300:25;8314:10;8300:13;:25::i;:::-;8295:44;;-1:-1:-1;8334:5:0;8327:12;;8295:44;8354:68;;;8406:15;8354:68;;;;8382:10;;8354:68;;;;;;;;;;-1:-1:-1;8439:4:0;8234:216;;:::o;10269:224::-;10318:4;10339:25;10353:10;10339:13;:25::i;:::-;10334:44;;-1:-1:-1;10373:5:0;10366:12;;10334:44;10393:72;;;10449:15;10393:72;;;;10425:10;;10393:72;;;;;;;;;;-1:-1:-1;10482:4:0;10269:224;:::o;5877:285:32:-;6019:39;6038:10;6050:7;6019:18;:39::i;:::-;6011:101;;;;-1:-1:-1;;;;;6011:101:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6123:32;6137:4;6143:2;6147:7;6123:13;:32::i;:::-;5877:285;;;:::o;3774:248:0:-;3832:4;3853:25;3867:10;3853:13;:25::i;:::-;3848:44;;-1:-1:-1;3887:5:0;3880:12;;3848:44;3907:87;;;3978:15;3907:87;;;;-1:-1:-1;;;;;3907:87:0;;;3928:10;;3907:87;;;;;;;;;-1:-1:-1;4011:4:0;3774:248;;;:::o;4631:520::-;4859:4;4880:25;4894:10;4880:13;:25::i;:::-;4875:44;;-1:-1:-1;4914:5:0;4907:12;;4875:44;5015:7;4991:10;-1:-1:-1;;;;;4934:189:0;4967:10;-1:-1:-1;;;;;4934:189:0;;5036:9;5059:13;5086;5113:9;4934:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4934:189:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5140:4:0;4631:520;;;;;;;;;:::o;8727:261::-;8790:4;8811:25;8825:10;8811:13;:25::i;:::-;8806:44;;-1:-1:-1;8845:5:0;8838:12;;8806:44;8865:95;;;;;;;;8944:15;8865:95;;;;;;8897:10;;8865:95;;;;;;;;-1:-1:-1;8977:4:0;8727:261;;;:::o;700:114:18:-;789:18;;700:114;:::o;1341:89::-;1403:20;1409:3;1414:8;1403:5;:20::i;:::-;1341:89;;:::o;6795:132:32:-;6881:39;6898:4;6904:2;6908:7;6881:39;;;;;;;;;;;;:16;:39::i;2897:223::-;2952:7;2987:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2987:20:32;3025:19;3017:73;;;;-1:-1:-1;;;;;3017:73:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3108:5;2897:223;-1:-1:-1;;2897:223:32:o;9263:236:0:-;9315:4;9336:25;9350:10;9336:13;:25::i;:::-;9331:44;;-1:-1:-1;9370:5:0;9363:12;;9331:44;9390:81;;;9455:15;9390:81;;;;9436:5;;9412:10;;9390:81;;;;;;;;;-1:-1:-1;9488:4:0;9263:236;;;:::o;2471:207:32:-;2526:7;-1:-1:-1;;;;;2553:19:32;;2545:74;;;;-1:-1:-1;;;;;2545:74:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2637:24:32;;;;;;:17;:24;;;;;:34;;:32;:34::i;6121:368:0:-;6248:4;6269:25;6283:10;6269:13;:25::i;:::-;6264:44;;-1:-1:-1;6303:5:0;6296:12;;6264:44;6323:138;;;;;;;;;;;;6445:15;6323:138;;;;;;6353:10;;6323:138;;;;;;;;;;-1:-1:-1;6478:4:0;6121:368;;;;:::o;7753:200::-;7790:4;7811:25;7825:10;7811:13;:25::i;:::-;7806:44;;-1:-1:-1;7845:5:0;7838:12;;7806:44;7865:60;;;7909:15;7865:60;;;;7885:10;;7865:60;;;;;;;;;;-1:-1:-1;7942:4:0;7753:200;:::o;3314:148::-;-1:-1:-1;3451:4:0;;3314:148::o;4730:243:32:-;-1:-1:-1;;;;;4809:16:32;;4815:10;4809:16;;4801:54;;;;;-1:-1:-1;;;;;4801:54:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;4885:10;4866:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4866:34:32;;;;;;;;;;;;:45;;-1:-1:-1;;4866:45:32;;;;;;;;;;4926:40;;;;;;;4866:34;;4885:10;4926:40;;;;;;;;;;;4730:243;;:::o;6767:210:0:-;6809:4;6830:25;6844:10;6830:13;:25::i;:::-;6825:44;;-1:-1:-1;6864:5:0;6857:12;;6825:44;6884:65;;;6933:15;6884:65;;;;6909:10;;6884:65;;;;;;;;;;-1:-1:-1;6966:4:0;6767:210;:::o;388:81:18:-;456:11;;388:81;:::o;7632:265:32:-;7738:31;7751:4;7757:2;7761:7;7738:12;:31::i;:::-;7787:48;7810:4;7816:2;7820:7;7829:5;7787:22;:48::i;:::-;7779:111;;;;-1:-1:-1;;;;;7779:111:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7632:265;;;;:::o;9776:208:0:-;9817:4;9838:25;9852:10;9838:13;:25::i;:::-;9833:44;;-1:-1:-1;9872:5:0;9865:12;;9833:44;9892:64;;;9940:15;9892:64;;;;9916:10;;9892:64;;;;;;;;;;-1:-1:-1;9973:4:0;9776:208;:::o;582:112:18:-;670:17;;582:112;:::o;7260:220:0:-;7307:4;7328:25;7342:10;7328:13;:25::i;:::-;7323:44;;-1:-1:-1;7362:5:0;7355:12;;7323:44;7382:70;;;7436:15;7382:70;;;;7412:10;;7382:70;;;;;;;;;;-1:-1:-1;7469:4:0;7260:220;:::o;5295:145:32:-;-1:-1:-1;;;;;5398:25:32;;;5375:4;5398:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5295:145::o;5484:354:0:-;5606:4;5627:25;5641:10;5627:13;:25::i;:::-;5622:44;;-1:-1:-1;5661:5:0;5654:12;;5622:44;5681:129;;;;;;;;;;;;5794:15;5681:129;;;;;;5741:7;;5717:10;;5681:129;;;;;;;;;-1:-1:-1;5827:4:0;5484:354;;;;;;:::o;8092:152:32:-;8149:4;8181:20;;;:11;:20;;;;;;-1:-1:-1;;;;;8181:20:32;8218:19;;;8092:152::o;8605:329::-;8690:4;8714:16;8722:7;8714;:16::i;:::-;8706:73;;;;-1:-1:-1;;;;;8706:73:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8789:13;8805:16;8813:7;8805;:16::i;:::-;8789:32;;8850:5;-1:-1:-1;;;;;8839:16:32;:7;-1:-1:-1;;;;;8839:16:32;;:51;;;;8883:7;-1:-1:-1;;;;;8859:31:32;:20;8871:7;8859:11;:20::i;:::-;-1:-1:-1;;;;;8859:31:32;;8839:51;:87;;;;8894:32;8911:5;8918:7;8894:16;:32::i;:::-;8831:96;8605:329;-1:-1:-1;;;;8605:329:32:o;10751:447::-;10864:4;-1:-1:-1;;;;;10844:24:32;:16;10852:7;10844;:16::i;:::-;-1:-1:-1;;;;;10844:24:32;;10836:78;;;;-1:-1:-1;;;;;10836:78:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10932:16:32;;10924:65;;;;-1:-1:-1;;;;;10924:65:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11000:23;11015:7;11000:14;:23::i;:::-;-1:-1:-1;;;;;11034:23:32;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;11079:21:32;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11123:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;11123:25:32;-1:-1:-1;;;;;11123:25:32;;;;;;;;;11164:27;;11123:20;;11164:27;;;;;;;10751:447;;;:::o;9179:327::-;-1:-1:-1;;;;;9250:16:32;;9242:61;;;;;-1:-1:-1;;;;;9242:61:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9322:16;9330:7;9322;:16::i;:::-;9321:17;9313:58;;;;;-1:-1:-1;;;;;9313:58:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;9382:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;9382:25:32;-1:-1:-1;;;;;9382:25:32;;;;;;;;9417:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9466;;9491:7;;-1:-1:-1;;;;;9466:33:32;;;9483:1;;9466:33;;9483:1;;9466:33;9179:327;;:::o;1063:112:25:-;1154:14;;1063:112::o;11771:347:32:-;11892:4;11917:15;:2;-1:-1:-1;;;;;11917:13:32;;:15::i;:::-;11912:58;;-1:-1:-1;11955:4:32;11948:11;;11912:58;11996:70;;;;;12033:10;11996:70;;;;;;-1:-1:-1;;;;;11996:70:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;11980:13;;11996:36;;;;;;12033:10;;12045:4;;12051:7;;12060:5;;11996:70;;;;;;;;;;;11980:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;11996:70:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11996:70:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11996:70:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11996:70:32;-1:-1:-1;;12084:26:32;12094:16;12084:26;;-1:-1:-1;;11771:347:32;;;;;;:::o;12280:171::-;12379:1;12343:24;;;:15;:24;;;;;;-1:-1:-1;;;;;12343:24:32;:38;12339:106;;12432:1;12397:24;;;:15;:24;;;;;:37;;-1:-1:-1;;12397:37:32;;;12280:171::o;1276:108:25:-;1356:14;;:21;;1375:1;1356:21;:18;:21;:::i;:::-;1339:38;;1276:108::o;1181:89::-;1244:19;;1262:1;1244:19;;;1181:89::o;542:413:35:-;902:20;940:8;;;542:413::o;1274:179:28:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;;;1351:49:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:28;;;1274:179::o",
  "source": "pragma solidity ^0.5.10;\n\nimport {ITBTCSystem} from \"../interfaces/ITBTCSystem.sol\";\nimport {DepositLog} from \"../DepositLog.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\n\ncontract TBTCSystem is ITBTCSystem, ERC721, DepositLog {\n\n    uint256 currentDifficulty = 1;\n    uint256 previousDifficulty = 1;\n    uint256 oraclePrice = 10 ** 12;\n\n    // Price Oracle\n    function fetchOraclePrice() external view returns (uint256) {return oraclePrice;}\n\n    // Difficulty Oracle\n    // TODO: This is a workaround. It will be replaced by tbtc-difficulty-oracle.\n    function fetchRelayCurrentDifficulty() external view returns (uint256) {\n        return currentDifficulty;\n    }\n\n    function fetchRelayPreviousDifficulty() external view returns (uint256) {\n        return previousDifficulty;\n    }\n\n    function submitCurrentDifficulty(uint256 _currentDifficulty) public {\n        if (currentDifficulty != _currentDifficulty) {\n            previousDifficulty = currentDifficulty;\n            currentDifficulty = _currentDifficulty;\n        }\n    }\n\n    // ERC721\n\n    /// @dev             Function to mint a new token.\n    ///                  Reverts if the given token ID already exists.\n    /// @param _to       The address that will own the minted token\n    /// @param _tokenId  uint256 ID of the token to be minted\n    function mint(address _to, uint256 _tokenId) public {\n        _mint(_to, _tokenId);\n    }\n}\n",
  "sourcePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/system/TBTCSystem.sol",
  "ast": {
    "absolutePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/system/TBTCSystem.sol",
    "exportedSymbols": {
      "TBTCSystem": [
        6247
      ]
    },
    "id": 6248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6168,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:18"
      },
      {
        "absolutePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/interfaces/ITBTCSystem.sol",
        "file": "../interfaces/ITBTCSystem.sol",
        "id": 6170,
        "nodeType": "ImportDirective",
        "scope": 6248,
        "sourceUnit": 5736,
        "src": "26:58:18",
        "symbolAliases": [
          {
            "foreign": 6169,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/DepositLog.sol",
        "file": "../DepositLog.sol",
        "id": 6172,
        "nodeType": "ImportDirective",
        "scope": 6248,
        "sourceUnit": 429,
        "src": "85:45:18",
        "symbolAliases": [
          {
            "foreign": 6171,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 6173,
        "nodeType": "ImportDirective",
        "scope": 6248,
        "sourceUnit": 10192,
        "src": "131:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6174,
              "name": "ITBTCSystem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5735,
              "src": "221:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITBTCSystem_$5735",
                "typeString": "contract ITBTCSystem"
              }
            },
            "id": 6175,
            "nodeType": "InheritanceSpecifier",
            "src": "221:11:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6176,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10191,
              "src": "234:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$10191",
                "typeString": "contract ERC721"
              }
            },
            "id": 6177,
            "nodeType": "InheritanceSpecifier",
            "src": "234:6:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6178,
              "name": "DepositLog",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 428,
              "src": "242:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DepositLog_$428",
                "typeString": "contract DepositLog"
              }
            },
            "id": 6179,
            "nodeType": "InheritanceSpecifier",
            "src": "242:10:18"
          }
        ],
        "contractDependencies": [
          428,
          5735,
          8959,
          8969,
          10191,
          10294
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6247,
        "linearizedBaseContracts": [
          6247,
          428,
          10191,
          10294,
          8959,
          8969,
          5735
        ],
        "name": "TBTCSystem",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6182,
            "name": "currentDifficulty",
            "nodeType": "VariableDeclaration",
            "scope": 6247,
            "src": "260:29:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "260:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 6181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "288:1:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6185,
            "name": "previousDifficulty",
            "nodeType": "VariableDeclaration",
            "scope": 6247,
            "src": "295:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "295:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 6184,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "324:1:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6190,
            "name": "oraclePrice",
            "nodeType": "VariableDeclaration",
            "scope": 6247,
            "src": "331:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6186,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "331:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "id": 6189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 6187,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "353:2:18",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3132",
                "id": 6188,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "359:2:18",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_12_by_1",
                  "typeString": "int_const 12"
                },
                "value": "12"
              },
              "src": "353:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6197,
              "nodeType": "Block",
              "src": "448:21:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6195,
                    "name": "oraclePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6190,
                    "src": "456:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6194,
                  "id": 6196,
                  "nodeType": "Return",
                  "src": "449:18:18"
                }
              ]
            },
            "documentation": null,
            "id": 6198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchOraclePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:2:18"
            },
            "returnParameters": {
              "id": 6194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6193,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6198,
                  "src": "439:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "438:9:18"
            },
            "scope": 6247,
            "src": "388:81:18",
            "stateMutability": "view",
            "superFunction": 5724,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6205,
              "nodeType": "Block",
              "src": "653:41:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6203,
                    "name": "currentDifficulty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6182,
                    "src": "670:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6202,
                  "id": 6204,
                  "nodeType": "Return",
                  "src": "663:24:18"
                }
              ]
            },
            "documentation": null,
            "id": 6206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchRelayCurrentDifficulty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:2:18"
            },
            "returnParameters": {
              "id": 6202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6201,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6206,
                  "src": "644:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "643:9:18"
            },
            "scope": 6247,
            "src": "582:112:18",
            "stateMutability": "view",
            "superFunction": 5729,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6213,
              "nodeType": "Block",
              "src": "772:42:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6211,
                    "name": "previousDifficulty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6185,
                    "src": "789:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6210,
                  "id": 6212,
                  "nodeType": "Return",
                  "src": "782:25:18"
                }
              ]
            },
            "documentation": null,
            "id": 6214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchRelayPreviousDifficulty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:18"
            },
            "returnParameters": {
              "id": 6210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6209,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6214,
                  "src": "763:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:9:18"
            },
            "scope": 6247,
            "src": "700:114:18",
            "stateMutability": "view",
            "superFunction": 5734,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6232,
              "nodeType": "Block",
              "src": "888:176:18",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6219,
                      "name": "currentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6182,
                      "src": "902:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6220,
                      "name": "_currentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6216,
                      "src": "923:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "902:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6231,
                  "nodeType": "IfStatement",
                  "src": "898:160:18",
                  "trueBody": {
                    "id": 6230,
                    "nodeType": "Block",
                    "src": "943:115:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 6222,
                            "name": "previousDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6185,
                            "src": "957:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6223,
                            "name": "currentDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6182,
                            "src": "978:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "957:38:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6225,
                        "nodeType": "ExpressionStatement",
                        "src": "957:38:18"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 6226,
                            "name": "currentDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6182,
                            "src": "1009:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6227,
                            "name": "_currentDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6216,
                            "src": "1029:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1009:38:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6229,
                        "nodeType": "ExpressionStatement",
                        "src": "1009:38:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 6233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitCurrentDifficulty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6216,
                  "name": "_currentDifficulty",
                  "nodeType": "VariableDeclaration",
                  "scope": 6233,
                  "src": "853:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:28:18"
            },
            "returnParameters": {
              "id": 6218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:18"
            },
            "scope": 6247,
            "src": "820:244:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6245,
              "nodeType": "Block",
              "src": "1393:37:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6241,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6235,
                        "src": "1409:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6242,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6237,
                        "src": "1414:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6240,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10015,
                      "src": "1403:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6244,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:20:18"
                }
              ]
            },
            "documentation": "@dev             Function to mint a new token.\n                  Reverts if the given token ID already exists.\n @param _to       The address that will own the minted token\n @param _tokenId  uint256 ID of the token to be minted",
            "id": 6246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6235,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6246,
                  "src": "1355:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6237,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6246,
                  "src": "1368:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:31:18"
            },
            "returnParameters": {
              "id": 6239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:18"
            },
            "scope": 6247,
            "src": "1341:89:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6248,
        "src": "198:1234:18"
      }
    ],
    "src": "0:1433:18"
  },
  "legacyAST": {
    "absolutePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/system/TBTCSystem.sol",
    "exportedSymbols": {
      "TBTCSystem": [
        6247
      ]
    },
    "id": 6248,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6168,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:18"
      },
      {
        "absolutePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/interfaces/ITBTCSystem.sol",
        "file": "../interfaces/ITBTCSystem.sol",
        "id": 6170,
        "nodeType": "ImportDirective",
        "scope": 6248,
        "sourceUnit": 5736,
        "src": "26:58:18",
        "symbolAliases": [
          {
            "foreign": 6169,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/tmp/892801fc84e9285e647acdc157d705c8aca4a9b5/implementation/contracts/DepositLog.sol",
        "file": "../DepositLog.sol",
        "id": 6172,
        "nodeType": "ImportDirective",
        "scope": 6248,
        "sourceUnit": 429,
        "src": "85:45:18",
        "symbolAliases": [
          {
            "foreign": 6171,
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 6173,
        "nodeType": "ImportDirective",
        "scope": 6248,
        "sourceUnit": 10192,
        "src": "131:65:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6174,
              "name": "ITBTCSystem",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5735,
              "src": "221:11:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITBTCSystem_$5735",
                "typeString": "contract ITBTCSystem"
              }
            },
            "id": 6175,
            "nodeType": "InheritanceSpecifier",
            "src": "221:11:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6176,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10191,
              "src": "234:6:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$10191",
                "typeString": "contract ERC721"
              }
            },
            "id": 6177,
            "nodeType": "InheritanceSpecifier",
            "src": "234:6:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6178,
              "name": "DepositLog",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 428,
              "src": "242:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DepositLog_$428",
                "typeString": "contract DepositLog"
              }
            },
            "id": 6179,
            "nodeType": "InheritanceSpecifier",
            "src": "242:10:18"
          }
        ],
        "contractDependencies": [
          428,
          5735,
          8959,
          8969,
          10191,
          10294
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 6247,
        "linearizedBaseContracts": [
          6247,
          428,
          10191,
          10294,
          8959,
          8969,
          5735
        ],
        "name": "TBTCSystem",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6182,
            "name": "currentDifficulty",
            "nodeType": "VariableDeclaration",
            "scope": 6247,
            "src": "260:29:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6180,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "260:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 6181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "288:1:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6185,
            "name": "previousDifficulty",
            "nodeType": "VariableDeclaration",
            "scope": 6247,
            "src": "295:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6183,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "295:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 6184,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "324:1:18",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6190,
            "name": "oraclePrice",
            "nodeType": "VariableDeclaration",
            "scope": 6247,
            "src": "331:30:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6186,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "331:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "id": 6189,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "3130",
                "id": 6187,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "353:2:18",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              },
              "nodeType": "BinaryOperation",
              "operator": "**",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "3132",
                "id": 6188,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "359:2:18",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_12_by_1",
                  "typeString": "int_const 12"
                },
                "value": "12"
              },
              "src": "353:8:18",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6197,
              "nodeType": "Block",
              "src": "448:21:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6195,
                    "name": "oraclePrice",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6190,
                    "src": "456:11:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6194,
                  "id": 6196,
                  "nodeType": "Return",
                  "src": "449:18:18"
                }
              ]
            },
            "documentation": null,
            "id": 6198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchOraclePrice",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:2:18"
            },
            "returnParameters": {
              "id": 6194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6193,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6198,
                  "src": "439:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "438:9:18"
            },
            "scope": 6247,
            "src": "388:81:18",
            "stateMutability": "view",
            "superFunction": 5724,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6205,
              "nodeType": "Block",
              "src": "653:41:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6203,
                    "name": "currentDifficulty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6182,
                    "src": "670:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6202,
                  "id": 6204,
                  "nodeType": "Return",
                  "src": "663:24:18"
                }
              ]
            },
            "documentation": null,
            "id": 6206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchRelayCurrentDifficulty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:2:18"
            },
            "returnParameters": {
              "id": 6202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6201,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6206,
                  "src": "644:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "643:9:18"
            },
            "scope": 6247,
            "src": "582:112:18",
            "stateMutability": "view",
            "superFunction": 5729,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6213,
              "nodeType": "Block",
              "src": "772:42:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6211,
                    "name": "previousDifficulty",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6185,
                    "src": "789:18:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6210,
                  "id": 6212,
                  "nodeType": "Return",
                  "src": "782:25:18"
                }
              ]
            },
            "documentation": null,
            "id": 6214,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchRelayPreviousDifficulty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:18"
            },
            "returnParameters": {
              "id": 6210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6209,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6214,
                  "src": "763:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "762:9:18"
            },
            "scope": 6247,
            "src": "700:114:18",
            "stateMutability": "view",
            "superFunction": 5734,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6232,
              "nodeType": "Block",
              "src": "888:176:18",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6219,
                      "name": "currentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6182,
                      "src": "902:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 6220,
                      "name": "_currentDifficulty",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6216,
                      "src": "923:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "902:39:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 6231,
                  "nodeType": "IfStatement",
                  "src": "898:160:18",
                  "trueBody": {
                    "id": 6230,
                    "nodeType": "Block",
                    "src": "943:115:18",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 6222,
                            "name": "previousDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6185,
                            "src": "957:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6223,
                            "name": "currentDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6182,
                            "src": "978:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "957:38:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6225,
                        "nodeType": "ExpressionStatement",
                        "src": "957:38:18"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 6228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 6226,
                            "name": "currentDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6182,
                            "src": "1009:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 6227,
                            "name": "_currentDifficulty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6216,
                            "src": "1029:18:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1009:38:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6229,
                        "nodeType": "ExpressionStatement",
                        "src": "1009:38:18"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 6233,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitCurrentDifficulty",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6216,
                  "name": "_currentDifficulty",
                  "nodeType": "VariableDeclaration",
                  "scope": 6233,
                  "src": "853:26:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "852:28:18"
            },
            "returnParameters": {
              "id": 6218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "888:0:18"
            },
            "scope": 6247,
            "src": "820:244:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6245,
              "nodeType": "Block",
              "src": "1393:37:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6241,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6235,
                        "src": "1409:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6242,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6237,
                        "src": "1414:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6240,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10015,
                      "src": "1403:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:20:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6244,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:20:18"
                }
              ]
            },
            "documentation": "@dev             Function to mint a new token.\n                  Reverts if the given token ID already exists.\n @param _to       The address that will own the minted token\n @param _tokenId  uint256 ID of the token to be minted",
            "id": 6246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6235,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6246,
                  "src": "1355:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1355:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6237,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6246,
                  "src": "1368:16:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6236,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1368:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1354:31:18"
            },
            "returnParameters": {
              "id": 6239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:18"
            },
            "scope": 6247,
            "src": "1341:89:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 6248,
        "src": "198:1234:18"
      }
    ],
    "src": "0:1433:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {
    "1101": {
      "events": {},
      "links": {},
      "address": "0xFC1738a42417dc64a620Fee7F976ec20c27baF23",
      "transactionHash": "0xcbf54aa318ce08093f3af372363c2684e07f06a94e8da130b98d40b1dc0297dc"
    }
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-08-06T12:54:21.927Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "approvedToLog(address)": {
        "details": "Calls the system to check if the caller is a Deposit                     We don't require this, so deposits are not bricked if the system borks",
        "params": {
          "_caller": "The address of the calling contract"
        },
        "return": "True if approved, otherwise false"
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "logCourtesyCalled()": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logCreated(address)": {
        "details": "We append the sender, which is the deposit contract that called",
        "params": {
          "_keepAddress": "The address of the associated keep"
        },
        "return": "True if successful, else revert"
      },
      "logExitedCourtesyCall()": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logFraudDuringSetup()": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logFunded()": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logGotRedemptionSignature(bytes32,bytes32,bytes32)": {
        "details": "We append the sender, which is the deposit contract that called",
        "params": {
          "_digest": "signed digest",
          "_r": "signature r value",
          "_s": "signature s value"
        },
        "return": "True if successful, else revert"
      },
      "logLiquidated()": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logRedeemed(bytes32)": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logRedemptionRequested(address,bytes32,uint256,bytes20,uint256,bytes)": {
        "details": "This is the only event without an explicit timestamp",
        "params": {
          "_digest": "The calculated sighash digest",
          "_outpoint": "The 36 byte outpoint",
          "_requestedFee": "The requester or bump-system specified fee",
          "_requester": "The ethereum address of the requester",
          "_requesterPKH": "The requester's 20-byte bitcoin pkh",
          "_utxoSize": "The size of the utxo in sat"
        },
        "return": "True if successful, else revert"
      },
      "logRegisteredPubkey(bytes32,bytes32)": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logSetupFailed()": {
        "details": "We append the sender, which is the deposit contract that called             returns false if not approved, to prevent accidentally halting Deposit",
        "return": "True if successful, else false"
      },
      "logStartedLiquidation(bool)": {
        "details": "We append the sender, which is the deposit contract that called",
        "params": {
          "_wasFraud": "True if liquidating for fraud"
        },
        "return": "True if successful, else revert"
      },
      "mint(address,uint256)": {
        "details": "Function to mint a new token.                  Reverts if the given token ID already exists.",
        "params": {
          "_to": "The address that will own the minted token",
          "_tokenId": "uint256 ID of the token to be minted"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approvedToLog(address)": {
        "notice": " AUTH  Checks if an address is an allowed logger"
      },
      "logCourtesyCalled()": {
        "notice": "Fires a CourtesyCalled event"
      },
      "logCreated(address)": {
        "notice": " Logging  Fires a Created event"
      },
      "logExitedCourtesyCall()": {
        "notice": "Fires a ExitedCourtesyCall event"
      },
      "logFraudDuringSetup()": {
        "notice": "Fires a FraudDuringSetup event"
      },
      "logFunded()": {
        "notice": "Fires a Funded event"
      },
      "logGotRedemptionSignature(bytes32,bytes32,bytes32)": {
        "notice": "Fires a GotRedemptionSignature event"
      },
      "logLiquidated()": {
        "notice": "Fires a Liquidated event"
      },
      "logRedeemed(bytes32)": {
        "notice": "Fires a Redeemed event"
      },
      "logRedemptionRequested(address,bytes32,uint256,bytes20,uint256,bytes)": {
        "notice": "Fires a RedemptionRequested event"
      },
      "logRegisteredPubkey(bytes32,bytes32)": {
        "notice": "Fires a RegisteredPubkey event"
      },
      "logSetupFailed()": {
        "notice": "Fires a SetupFailed event"
      },
      "logStartedLiquidation(bool)": {
        "notice": "Fires a StartedLiquidation event"
      }
    }
  }
}